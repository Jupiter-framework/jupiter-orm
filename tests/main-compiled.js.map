{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["import { expect } from 'chai';\r\nimport promiseES6 from 'es6-promise';\r\nimport assert from 'assert';\r\n\r\nimport { typeRegister, Fabric, getType } from '../orm';\r\nimport ormInterface from '../orm-interface';\r\n\r\ndescribe('ORM' , function(){\r\n    describe('orm module', function(){\r\n\r\n        it('must have API functions', function(){\r\n            [typeRegister, Fabric, getType].forEach(function(func){\r\n                expect(func).to.be.ok.and.to.be.a('function');\r\n            });\r\n        });\r\n\r\n        it('registerType should return true on success', function(){\r\n            expect(typeRegister('name', {})).to.be.ok.and.eql(true);\r\n        });\r\n\r\n        it('Object written to registry by name, should be accessible by name through getType()', function(){\r\n            let testObj = {prop: true};\r\n            typeRegister('test', testObj);\r\n\r\n            expect(getType('test')).to.be.eql(testObj);\r\n        });\r\n\r\n        it('Fabric should return object of registered type with 2 methods: query() and exec()', function(){\r\n            typeRegister('test', ormInterface);\r\n            let testSubject = Fabric('test', {opts: true});\r\n\r\n            expect(testSubject.query).to.be.ok.and.to.be.a('function');\r\n            expect(testSubject.exec).to.be.ok.and.to.be.a('function');\r\n        });\r\n    });\r\n\r\n    describe('orm interface module', function() {\r\n\r\n        it('Module object should have method getOrm()', function () {\r\n            expect(ormInterface.getOrm).to.be.ok.and.be.a('function');\r\n        });\r\n\r\n        it('Method getOrm() should return object with 2 methods: query() and exec()', function () {\r\n            expect(ormInterface.getOrm({}).query).to.be.ok.and.to.be.a('function');\r\n            expect(ormInterface.getOrm({}).exec).to.be.ok.and.to.be.a('function');\r\n        });\r\n\r\n        it('ORM object\\'s method query() should return adapter object with API methods' , function () {\r\n            let testSubject = ormInterface.getOrm({}).query();\r\n\r\n            expect(testSubject.setCollection).to.be.ok.and.to.be.a('function');\r\n            expect(testSubject.where).to.be.ok.and.to.be.a('function');\r\n            expect(testSubject.order).to.be.ok.and.to.be.a('function');\r\n            expect(testSubject.limit).to.be.ok.and.to.be.a('function');\r\n            expect(testSubject.exec).to.be.ok.and.to.be.a('function');\r\n        });\r\n\r\n        it('ORM object\\'s method exec() should return promise', function () {\r\n            let testSubject = ormInterface.getOrm({});\r\n\r\n            assert(true, testSubject.exec().resolve);\r\n            assert(true, testSubject.query().exec().resolve);\r\n        });\r\n\r\n        it('Adapter objects API methods, except exec() should return itself for chainability', function () {\r\n            let testSubject = ormInterface.getOrm({}).query();\r\n\r\n            expect(testSubject.setCollection()).to.be.ok.and.be.eql(testSubject);\r\n            expect(testSubject.where()).to.be.ok.and.be.eql(testSubject);\r\n            expect(testSubject.order()).to.be.ok.and.be.eql(testSubject);\r\n            expect(testSubject.limit()).to.be.ok.and.be.eql(testSubject);\r\n        });\r\n    });\r\n});"]}